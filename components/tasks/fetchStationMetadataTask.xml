<?xml version="1.0" encoding="utf-8" ?>

<component name = "fetchStationMetadataTask" extends = "Task" >
  <interface>
    <field id = "track" type = "assocarray" />
    <field id = "station" type = "assocarray" onChange="stationChanged"/>
    <field id = "test" type = "assocarray" />
  </interface>

<script type="text/brightscript" uri="pkg:/source/roku-lib/RokuLib/util/MathUtils.brs" />
<script type="text/brightscript" uri="pkg:/source/roku-lib/RokuLib/util/GeneralUtils.brs" />
<script type="text/brightscript" uri="pkg:/source/Amplitude-Brightscript/Analytics.brs" />
<script type="text/brightscript" uri="pkg:/source/Downloads.brs" />
<script type="text/brightscript" uri="pkg:/source/Analytics_events.brs" />
<script type="text/brightscript" uri="pkg:/source/web_server/utils.brs" />
<script type="text/brightscript" uri="pkg:/source/Stylesheet.brs" />
<script type="text/brightscript" uri="pkg:/source/session.brs" />
<script type="text/brightscript" uri="pkg:/source/Config.brs" />
<script type="text/brightscript" uri="pkg:/source/HueLighting.brs" />
<script type="text/brightscript" uri="pkg:/source/utils.brs" />
<script type="text/brightscript" uri="pkg:/components/tasks/fetchStationMetadataTask.brs" />

  <script type = "text/brightscript" >
    <![CDATA[
        sub init()
            print "fetchStationMetadataTask#init()"
            
            m.top.functionName = "start"
            m.timer = CreateObject("roTimespan")
            ' m.top.ObserveField("station", "stationChanged")
            m.top.ObserveField("state", "stateChanged")
            m.top.ObserveField("control", "controlChanged")
        end sub

        sub start()
           'track = fetch()
           'trackFetched(track)

           m.timer.mark()

           timerPort = CreateObject("roMessagePort")

           while true 'm.top.control = "run"                
                wait(5000, timerPort)
                  m.timer.mark()
                  print "TEST 1"
                  ' print m.top
                  print "TEST 2"
                  m.top.test = createObject("roAssociativeArray")
                  print "TEST 3"
                  track = fetch()
                  trackFetched(track)
            end while
        end sub

        sub trackFetched(track)
            if track <> invalid
                'if m.currentTrack <> invalid AND m.currentTrack.title <> track.title
                    'stop
                    m.currentTrack = track                    
                    m.top.track = track
                'end if

                ' if m.currentTrack = invalid
                '     m.top.track = track
                '     m.currentTrack = track
                ' end if
            end if
        end sub

        sub stationChanged(event)
            m.station = event.getData()
        end sub

    ]]>
  </script>
</component>
